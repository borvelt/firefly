#!/usr/bin/env php
<?php
function listDirectory( $path, $type=null, $recursive=true, $filter=null, $query=null, $skipCache=false ) {
    $list = [];
    if(is_null($path)) {
        return $list;
    }
    $iterator = new RecursiveDirectoryIterator($path, RecursiveDirectoryIterator::SKIP_DOTS);
    if ($recursive) {
        $iterator = new RecursiveIteratorIterator($iterator, RecursiveIteratorIterator::SELF_FIRST);
    }
    if (!is_null($query)) {
        $iterator = new RegexIterator($iterator, '/(.*'.$query.')/', RecursiveRegexIterator::GET_MATCH);
    }
    $list_count = 0;
    foreach ($iterator as $filename => $SPLObject) {
        if (!$SPLObject instanceof SplFileInfo) {
            $SPLObject = new SplFileInfo($filename);
        }
        if ($SPLObject->isReadable()) {
            $finfo = new finfo();
            $mimeType = $finfo->file($SPLObject->getRealpath(), FILEINFO_MIME);
            $data = ['name' => $SPLObject->getFilename(), 'size' => $SPLObject->getSize(), 'path' => $SPLObject->getRealpath(), 'type' => $SPLObject->getType(), 'mimeType' => $mimeType];
            if (!is_null($type)) {
                if ($type == 'dir' && $SPLObject->isDir()) {
                    $list[] = $data;
                } else if ($type == 'file' && $SPLObject->isFile()) {
                    if (!is_null($filter)) {
                        $filetype = pathinfo($data['path'], PATHINFO_EXTENSION);
                        if (in_array(strtolower($filetype), (array)$filter)) {
                            $list[] = $data;
                        }
                    } else {
                        $list[] = $data;
                    }
                }
            } else {
                if ($SPLObject->isFile()) {
                    if (!is_null($filter)) {
                        $filetype = pathinfo($data['path'], PATHINFO_EXTENSION);
                        if (in_array(strtolower($filetype), (array)$filter)) {
                            $list[] = $data;
                        }
                    } else {
                        $list[] = $data;
                    }
                } else {
                    $list[] = $data;
                }
            }
        }
    }
    return $list;
}
function compress_image($source_path, $destination_path, $quality) {
  $info = getimagesize($source_path);
  if ($info['mime'] == 'image/jpeg') {
    $image = imagecreatefromjpeg($source_path);
  } else if ($info['mime'] == 'image/gif') {
    $image = imagecreatefromgif($source_path);
  } else if ($info['mime'] == 'image/png') {
    $image = imagecreatefrompng($source_path);
  }
  imagejpeg($image, $destination_path, $quality);
}
$png_files_in_web_directory_system = listDirectory ("/Users/borvelt/iProjects/tricks/api/web/system/images/000/000/", "file", true, null, ".png") ;
foreach ($png_files_in_web_directory_system as $file) {
    $path = null;
    $path_str = str_replace ('system', 'compressed_system', $file['path']);
    $array_path = explode('/', $path_str);
    array_pop($array_path);
    array_shift($array_path);
    foreach ($array_path as $ap) {
      if($ap != '' && $ap != null && $ap != '/') {
      $path = $path . "/" . $ap;
      if(!is_dir ($path)) {
        mkdir($path);
      }
    }
  }
  compress_image($file['path'], $path.'/'.$file['name'],75);
}
