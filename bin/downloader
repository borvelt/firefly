#!/usr/bin/env php
<?php
require __DIR__.DIRECTORY_SEPARATOR.'../vendor/autoload.php';
error_reporting(1);


function file_name(){
	return __DIR__.'/.db';
}


function download_progress_file_name(){
	return __DIR__.'/.proc';
}


function interupted_downloads_file_name(){
	return __DIR__.'/.int';
}


function encryption_key(){
	return "Белого дома_-Эксмо";
}


function XORencrypt($input){
	settype($input, "string");
	$enc = base64_encode($input ^ encryption_key());
	return $enc;
}


function XORdecrypt($enc){
	$dec = base64_decode($enc) ^ encryption_key();
	settype($dec, "integer");
	return $dec;
}


function save_last_book_id($last_book_id){
	file_put_contents(file_name(), "null");
	$content = XORencrypt($last_book_id);
	return file_put_contents(file_name(), $content);
}


function get_last_book_id(){
	$file_name = file_name();
	if(file_exists($file_name)){
		$content = file_get_contents($file_name);
	} else {
		return 1;
	}
	$content = trim($content);
	$last_book_id = XORdecrypt($content);
	if($last_book_id == 0){
		$last_book_id = 1;
	}
	return $last_book_id;
}


function get_book_info($book_id){
	$book = Book::whereId($book_id)->first();
	if(!$book) {
		throw new Exception("Book Not Found Book Id Is: " . $book_id, 1);
	}
	return $book;
}


function generate_book_link($md5_hash){
	return "http://libgen.io/ads.php?md5=".$md5_hash;
}


function download_book($book_url){
	$downloader = new Downloader($book_url, 3600);
	$download_result = $downloader->captchaloader();
	if (!isset($download_result['filename'])){
		throw new Exception("An Error Occured While Download Book With Link: " . $book_url." Reasone: ".$download_result, 1);
	}
	return $download_result['pdf'];
}


function check_book_size($book_info, $book_path) {
	$file_size = filesize($book_path);
	$up = $file_size + 1000;
	$down = $file_size - 1000;
	if($book_info->filesize > $up || $book_info->filesize < $down){
		if(file_exists($book_path)){
			unlink($book_path);
		}
		if(file_exists($book_path.'.zip')){
			unlink($book_path.'.zip');
		}
		throw new Exception("Downloaded Book Is Corrupt Book Id Is: " . $book_info->id, 1);
	}
}


function check_book_extension($book_info, $book_path){
	if ($book_info->extension != pathinfo($book_path, PATHINFO_EXTENSION)) {
		throw new Exception("Downloaded Book And DB Book Extension Missed Match Book Id Is: " . $book_info->id, 1);
	}

}


function check_book_zip_file($book_info, $book_path){
	$zip_path = $book_path.".zip";
	if(!file_exists($zip_path) && filesize(filename) < 50000){
		throw new Exception("Book Is Not Comfortable Book Id Is: " . $book_info->id, 1);
	}
}


function is_download_in_porgress(){
	$filename = download_progress_file_name();
	if(file_exists($filename)){
		if(time() - filemtime($filename) > 170) {
			remove_download_progress();
		} else {
			throw new Exception("Another Download Is In Progress.", 1);
		}
	} else {
		file_put_contents($filename, null);
	}
}


function interupted_downloads($book_id){
	file_put_contents(interupted_downloads_file_name(), XORencrypt($book_id)."\n", FILE_APPEND);
}


function remove_download_progress(){
	$name = download_progress_file_name();
	if(file_exists($name)){
		unlink($name);
	}
}


function formatBytes($size, $precision=2){
    $base = log($size, 1024);
    $suffixes = array('', 'KB', 'MB', 'GB', 'TB');   
    return round(pow(1024, $base - floor($base)), $precision) .' '. $suffixes[floor($base)];
}


function handler(){
	is_download_in_porgress();
	$last_book_id = get_last_book_id();
	$next_book_id = $last_book_id + 1;
	save_last_book_id($next_book_id);
	bootstrap($last_book_id);
	remove_download_progress();
}


function bootstrap($last_book_id){
	try{
		$book_info = get_book_info($last_book_id);
		$book_link = generate_book_link($book_info->md5);
		$book_path = download_book($book_link);
		check_book_size($book_info, $book_path);
		check_book_extension($book_info, $book_path);
		check_book_zip_file($book_info, $book_path);
		echo $book_info->md5 . "\n" . basename($book_path) . "\n" . formatBytes(disk_free_space(__DIR__)) . "\n";
	}catch(Exception $e){
		echo $e->getMessage() . '(File: '.$e->getFile().'-Line: ' . $e->getLine() . ')' . "\n";
		interupted_downloads($last_book_id);
	}
}


handler();
remove_download_progress();